#!/bin/bash
{% import 'macros/ip_funcs.j2' as ipfn %}
case "$IFACE" in
{# ------ VXLAN UNDERLAY PHYSICAL INTERFACES ------ #}
{% for interface in network_underlay_interfaces|selectattr('is_phy', 'equalto', true)|list %}
    {{ interface.name }})
      ethtool --set-fec {{ interface.name }} encoding {{ interface.fec|default('auto' if interface.speed|default(0) >= 25000 else 'rs') }}
      ;;
{% endfor %}
{# ------ BOND PHYSICAL ETHERNET INTERFACES ------ #}
{% for bond in network_bonds|default([]) %}
{%   for interface in bond.interfaces|selectattr('is_phy', 'equalto', true)|list %}
    {{ interface.name }})
      ethtool --set-fec {{ interface.name }} encoding {{ interface.fec|default('auto' if interface.speed|default(0) >= 25000 else 'rs') }}
      ;;
{%   endfor %}
{% endfor %}
{# ------ BRIDGE PHYSICAL ETHERNET INTERFACES ------ #}
{% for bridge in network_bridges|default([]) %}
{%   for interface in bridge.interfaces|selectattr('is_phy', 'equalto', true)|list %}
    {{ interface.name }})
      ethtool --set-fec {{ interface.name }} encoding {{ interface.fec|default('auto' if interface.speed|default(0) >= 25000 else 'rs') }}
      ;;
{%   endfor %}
{% endfor %}
{# ------ PHYSICAL ETHERNET INTERFACES ------ #}
{% for interface in network_interfaces|list %}
    {{ interface.name }})
      ethtool --set-fec {{ interface.name }} encoding {{ interface.fec|default('auto' if interface.speed|default(0) >= 25000 else 'rs') }}
      ;;
{% endfor %}
    *)
      ;;
esac

exit 0
